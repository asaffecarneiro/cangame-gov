name: Deploy to Hostinger

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-development:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: ${{ vars.URL }}

    steps:
    - name: Repo Checkout
      uses: actions/checkout@v1

    - name: Backup Current Deployment
      run: |
        ssh -o StrictHostKeyChecking=no -p ${{ secrets.DEPLOY_SSH_PORT }} ${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }} "tar czf ~/backup_$(date +'%Y%m%d%H%M%S').tar.gz -C /home/u596734850/domains/develop-gov.cangame.com.br public_html"

    - name: Hostinger Development Server
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "./wp-content/"
        REMOTE_HOST: ${{ secrets.DEPLOY_SSH_HOST }}
        REMOTE_USER: ${{ secrets.DEPLOY_SSH_USER }}
        REMOTE_PORT: ${{ secrets.DEPLOY_SSH_PORT }}
        TARGET: ${{ vars.TARGET }}
        EXCLUDE: ".vscode, *.gitignore, *.gitmodules, *.git, *.gitkeep, *.github, README.md, LICENSE, CODEOWNERS"
        SCRIPT_AFTER: |
          set -e
          # Verifica o status do site
          STATUS=$(curl -o /dev/null -s -w "%{http_code}\n" https://develop-gov.cangame.com.br)
          if [[ $STATUS -ne 200 ]]; then
            echo "Deployment failed with status $STATUS. Reverting to previous backup."
            # Reverte para o backup anterior
            ssh -o StrictHostKeyChecking=no -p ${{ secrets.DEPLOY_SSH_PORT }} ${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }} "rm -rf /home/u596734850/domains/develop-gov.cangame.com.br/public_html/* && tar xzf ~/backup_*.tar.gz -C /home/u596734850/domains/develop-gov.cangame.com.br"
            echo "Reverted to previous backup."
            exit 1
          else
            echo "Deployment successful."
          fi

    - name: Notify Deployment Failure
      if: failure()
      run: |
        echo "Deployment failed. The site has been reverted to the previous backup."

    - name: Notify Deployment Success
      if: success()
      run: |
        echo "Deployment successful."


  deploy-staging:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ vars.URL }}
    needs: deploy-development
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
        
      - name: Hostinger Staging Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "./wp-content/"
          REMOTE_HOST: ${{ secrets.DEPLOY_SSH_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_SSH_USER  }}
          REMOTE_PORT: ${{ secrets.DEPLOY_SSH_PORT }}
          TARGET: ${{ vars.TARGET }}
          EXCLUDE: ".vscode, *.gitignore, *.gitmodules, *.git, *.gitkeep, *.github, README.MD, LICENSE, CODEOWNERS"
             
  deploy-production:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ vars.URL }}
    needs: deploy-staging
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostinger Production Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "./wp-content/"
          REMOTE_HOST: ${{ secrets.DEPLOY_SSH_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_SSH_USER  }}
          REMOTE_PORT: ${{ secrets.DEPLOY_SSH_PORT }}
          TARGET: ${{ vars.TARGET }}
          EXCLUDE: ".vscode, *.gitignore, *.gitmodules, *.git, *.gitkeep, *.github, README.MD, LICENSE, CODEOWNERS"




